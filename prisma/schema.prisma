// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  username  String?    @unique
  name      String?
  email     String?    @unique
  connected Boolean
  createdAt DateTime   @default(now())
  Message   Message[]
  RoomUser  RoomUser[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  roomId    String
  room      Room     @relation("RoomMessages", fields: [roomId], references: [id], onDelete: Cascade)
  role      Role
}

model Room {
  id        String     @id @default(uuid())
  token     String     @unique
  createdAt DateTime   @default(now())
  RoomUser  RoomUser[]
  Message   Message[]  @relation("RoomMessages")
}

model RoomUser {
  id       Int      @id @default(autoincrement())
  roomId   String
  userId   String
  role     Role
  joinedAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([roomId, userId])
}

enum Role {
  CONSULT
  PATIENT
}
